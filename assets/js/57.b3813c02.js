(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{405:function(t,s,a){"use strict";a.r(s);var e=a(42),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("正则表达式验证工具： "),a("a",{attrs:{href:"https://regexper.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://regexper.com/"),a("OutboundLink")],1),t._v(" 或者 "),a("a",{attrs:{href:"http://regexper.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://regexper.cn/"),a("OutboundLink")],1)])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式教程"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"创建正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建正则表达式"}},[t._v("#")]),t._v(" 创建正则表达式")]),t._v(" "),a("p",[t._v("最简单的方式是通过字面量创建：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[a-zA-Z]/gi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("也可以通过 "),a("code",[t._v("RegExp")]),t._v(" 构造函数来创建：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[a-zA-Z]'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[a-zA-Z]/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("修饰符")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("i")])]),t._v(" "),a("td",[t._v("执行对大小写不敏感的匹配")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("g")])]),t._v(" "),a("td",[t._v("执行全局匹配（查找所有匹配，而非在找到第一个匹配后停止）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("m")])]),t._v(" "),a("td",[t._v("执行多行匹配")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("s")])]),t._v(" "),a("td",[t._v("执行单行匹配")])])])]),t._v(" "),a("h2",{attrs:{id:"正则对象属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则对象属性"}},[t._v("#")]),t._v(" 正则对象属性")]),t._v(" "),a("blockquote",[a("p",[t._v("属性均为只读，无法设置其值")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("含义")]),t._v(" "),a("th",[t._v("默认值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("global")])]),t._v(" "),a("td",[t._v("是否全文搜索")]),t._v(" "),a("td",[a("code",[t._v("false")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ignoreCase")])]),t._v(" "),a("td",[t._v("是否大小写敏感")]),t._v(" "),a("td",[a("code",[t._v("false")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("multiline")])]),t._v(" "),a("td",[t._v("多行搜索")]),t._v(" "),a("td",[a("code",[t._v("false")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("lastIndex")])]),t._v(" "),a("td",[t._v("是当前表达式匹配内容的最后一个字符的下一个位置")]),t._v(" "),a("td",[t._v("无")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("source")])]),t._v(" "),a("td",[t._v("正则表达式的文本字符串")]),t._v(" "),a("td",[t._v("无")])])])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\w/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\w/gim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ignoreCase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("multiline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "\\w"')]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ignoreCase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("multiline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "\\w"')]),t._v("\n")])])]),a("h2",{attrs:{id:"方括号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方括号"}},[t._v("#")]),t._v(" 方括号")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("表达式")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("[abc]")])]),t._v(" "),a("td",[t._v("匹配方括号之间的任何字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("[^abc]")])]),t._v(" "),a("td",[t._v("匹配任何不在方括号之间的字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("[0-9]")])]),t._v(" "),a("td",[t._v("匹配任何从 0 至 9 的数字")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("[a-z]")])]),t._v(" "),a("td",[t._v("匹配任何从小写 a 到小写 z 的字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("[A-Z]")])]),t._v(" "),a("td",[t._v("匹配任何从大写 A 到大写 Z 的字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("[A-z]")])]),t._v(" "),a("td",[t._v("匹配任何从大写 A 到小写 z 的字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("[adgk]")])]),t._v(" "),a("td",[t._v("匹配给定集合内的任何字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("[^adgk]")])]),t._v(" "),a("td",[t._v("匹配给定集合外的任何字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("(red|blue|green)")])]),t._v(" "),a("td",[t._v("匹配任何指定的选项")])])])]),t._v(" "),a("h2",{attrs:{id:"子表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子表达式"}},[t._v("#")]),t._v(" 子表达式")]),t._v(" "),a("p",[t._v("用括号括起来的正则表达式。例如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\w*)\\s*(\\w*)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ans "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$2 $1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ans"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// world hello")]),t._v("\n")])])]),a("p",[t._v("如 "),a("code",[t._v("/(\\w*)\\s*(\\w*)/")]),t._v(" 中，第一个括号 "),a("code",[t._v("(\\w*)")]),t._v(" 匹配到的字符串（本例中是 "),a("code",[t._v("hello")]),t._v("），记为 "),a("code",[t._v("$1")]),t._v("，第二个括号 "),a("code",[t._v("(\\w*)")]),t._v(" 匹配到的字符串（本例中是 "),a("code",[t._v("world")]),t._v("），记为 "),a("code",[t._v("$2")]),t._v("。")]),t._v(" "),a("p",[t._v("简单地说：从左到右，以分组的左括号为标志，第一个出现的分组的序号为 1，第二个为 2，以此类推。")]),t._v(" "),a("p",[t._v("复杂地说：分组 0 对应整个正则表达式实际上组号分配过程是要从左向右扫描两遍的：第一遍只给未命名组分配，第二遍只给命名组分配－－因此所有命名组的组号都大于未命名的组号。可以使用 "),a("code",[t._v("(?:exp)")]),t._v(" 这样的语法来剥夺一个分组对组号分配的参与权。")]),t._v(" "),a("p",[t._v("参考："),a("a",{attrs:{href:"https://www.cnblogs.com/zichi/p/4343009.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("我所认识的javascript正则表达式"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"元字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[t._v("#")]),t._v(" 元字符")]),t._v(" "),a("p",[t._v("元字符是拥有特殊含义的字符：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("元字符")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v(".")])]),t._v(" "),a("td",[t._v("匹配除 \\n 以外的任何字符（注意元字符是小数点）。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\w")])]),t._v(" "),a("td",[t._v("匹配大小写英文字符及数字 "),a("code",[t._v("0")]),t._v(" 到 "),a("code",[t._v("9")]),t._v(" 之间的任意一个及下划线，相当于 "),a("code",[t._v("[a-zA-Z0-9_]")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\W")])]),t._v(" "),a("td",[t._v("不匹配大小写英文字符及数字 "),a("code",[t._v("0")]),t._v(" 到 "),a("code",[t._v("9")]),t._v(" 之间的任意一个，相当于 "),a("code",[t._v("[^a-zA-Z0-9_]")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\s")])]),t._v(" "),a("td",[t._v("匹配任何空白字符，相当于 "),a("code",[t._v("[ \\f\\n\\r\\t\\v]")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\S")])]),t._v(" "),a("td",[t._v("匹配任何非空白字符，相当于 "),a("code",[t._v("[^\\s]")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\b")])]),t._v(" "),a("td",[t._v("匹配单词边界")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\B")])]),t._v(" "),a("td",[t._v("匹配非单词边界")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\d")])]),t._v(" "),a("td",[t._v("匹配任何 "),a("code",[t._v("0")]),t._v(" 到 "),a("code",[t._v("9")]),t._v(" 之间的单个数字，相当于 "),a("code",[t._v("[0-9]")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\D")])]),t._v(" "),a("td",[t._v("不匹配任何 "),a("code",[t._v("0")]),t._v(" 到 "),a("code",[t._v("9")]),t._v(" 之间的单个数字，相当于 "),a("code",[t._v("[^0-9]")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("[\\u4e00-\\u9fa5]")])]),t._v(" "),a("td",[t._v("匹配任意单个汉字（这里用的是 "),a("code",[t._v("Unicode")]),t._v(" 编码表示汉字的 )")])])])]),t._v(" "),a("p",[t._v("助记：")]),t._v(" "),a("ul",[a("li",[t._v("w: word")]),t._v(" "),a("li",[t._v("s: space")]),t._v(" "),a("li",[t._v("d: digit")])]),t._v(" "),a("h2",{attrs:{id:"量词-限定符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#量词-限定符"}},[t._v("#")]),t._v(" 量词（限定符）")]),t._v(" "),a("p",[t._v("上面的元字符都是针对单个字符匹配的，要想同时匹配多个字符的话，还需要借助限定符。")]),t._v(" "),a("p",[t._v("下面是一些常见的限定符 ( 下表中 "),a("code",[t._v("n")]),t._v(" 和 "),a("code",[t._v("m")]),t._v(" 都是表示整数，并且 "),a("code",[t._v("0 < n < m")]),t._v(") ：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("限定符")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("{n}")])]),t._v(" "),a("td",[t._v("匹配 "),a("code",[t._v("n")]),t._v(" 个元字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("{n,}")])]),t._v(" "),a("td",[t._v("匹配至少 "),a("code",[t._v("n")]),t._v(" 个元字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("{n,m}")])]),t._v(" "),a("td",[t._v("匹配 "),a("code",[t._v("n")]),t._v(" 到 "),a("code",[t._v("m")]),t._v(" 个元字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("*")])]),t._v(" "),a("td",[t._v("匹配 0 到多个元字符，相当于 "),a("code",[t._v("{0,}")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("?")])]),t._v(" "),a("td",[t._v("匹配 0 到 1 个元字符，相当于 "),a("code",[t._v("{0,1}")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("+")])]),t._v(" "),a("td",[t._v("匹配至少 1 个元字符，相当于 "),a("code",[t._v("{1,}")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("^")])]),t._v(" "),a("td",[t._v("字符串必须以指定的字符开始")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$")])]),t._v(" "),a("td",[t._v("字符串必须以指定的字符结束")])])])]),t._v(" "),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("由于在正则表达式中"),a("code",[t._v("\\")]),t._v("、"),a("code",[t._v("?")]),t._v("、"),a("code",[t._v("*")]),t._v("、"),a("code",[t._v("^")]),t._v("、"),a("code",[t._v("$")]),t._v("、"),a("code",[t._v("+")]),t._v("、"),a("code",[t._v("(")]),t._v("、"),a("code",[t._v(")")]),t._v("、"),a("code",[t._v("|")]),t._v("、"),a("code",[t._v("{")]),t._v("、"),a("code",[t._v("[")]),t._v("等字符已经具有一定特殊意义，如果需要用它们的原始意义，则应该对它进行转义，例如希望在字符串中至少有一个“ \\ ”，那么正则表达式应该这么写： "),a("code",[t._v("\\\\+")]),t._v(" 。")])]),t._v(" "),a("li",[a("p",[t._v("可以将多个元字符或者原义文本字符用括号括起来形成一个分组，比如 "),a("code",[t._v("^(13)[4-9]\\d{8}$")]),t._v(" 表示任意以 "),a("code",[t._v("13")]),t._v(" 开头的移动手机号码。")])]),t._v(" "),a("li",[a("p",[t._v("另外对于中文字符的匹配是采用其对应的 "),a("code",[t._v("Unicode")]),t._v(" 编码来匹配的，对于单个 "),a("code",[t._v("Unicode")]),t._v(" 字符，如 "),a("code",[t._v("\\u4e00")]),t._v(" 表示汉字“一”， "),a("code",[t._v("\\u9fa5")]),t._v("  表示汉字“龥”，在 "),a("code",[t._v("Unicode")]),t._v(" 编码中这分别是所能表示的汉字的第一个和最后一个的 "),a("code",[t._v("Unicode")]),t._v(" 编码，在 "),a("code",[t._v("Unicode")]),t._v(" 编码中能表示 20901 个汉字。")])]),t._v(" "),a("li",[a("p",[t._v("关于 "),a("code",[t._v("\\b")]),t._v(" 的用法，它代表单词的开始或者结尾，以字符串 "),a("code",[t._v("123a 345b 456 789d")]),t._v(" 作为示例字符串，如果正则表达式是 "),a("code",[t._v("\\b\\d{3}\\b")]),t._v("，则仅能匹配 "),a("code",[t._v("456")]),t._v(" 。")])]),t._v(" "),a("li",[a("p",[t._v("可以使用 "),a("code",[t._v("|")]),t._v(" 来表示或的关系，例如 "),a("code",[t._v("[z|j|q]")]),t._v(" 表示匹配 "),a("code",[t._v("z")]),t._v(" 、 "),a("code",[t._v("j")]),t._v(" 、 "),a("code",[t._v("q")]),t._v(" 之中的任意一个字母。")])]),t._v(" "),a("li",[a("p",[t._v("正则验证工具： "),a("a",{attrs:{href:"https://regexper.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://regexper.com/"),a("OutboundLink")],1),t._v(" 或者 "),a("a",{attrs:{href:"http://regexper.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://regexper.cn/"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=v.exports}}]);